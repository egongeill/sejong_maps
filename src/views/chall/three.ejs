<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Challenge_3</title>
    <script
      src="https://kit.fontawesome.com/d5fbb687f5.js"
      crossorigin="anonymous"
    ></script>
    <link rel="stylesheet" href="/css/style.css" type="text/css" />
    <link rel="stylesheet" href="/css/font.css" type="text/css" />
  </head>
  <body class="chall__body wrapper">
    <nav class="index-nav">
      <div class="btn-box">
        <div class="icon-btn">
          <a href="/" class="block"><i class="fas fa-home"></i></a>
        </div>
        <span>홈</span>
      </div>
      <div class="btn-box">
        <div class="icon-btn">
          <a href="/navs/howtocome" class="block"
            ><i class="fas fa-walking"></i
          ></a>
        </div>
        <span>세종 오는 길</span>
      </div>
      <div class="btn-box">
        <div class="icon-btn">
          <a href="/navs/tips" class="block"><i class="fas fa-pen"></i></a>
        </div>
        <span>세종 꿀팁</span>
      </div>
      <div class="btn-box">
        <div class="icon-btn">
          <a href="/navs/comments" class="block"
            ><i class="fas fa-comments"></i
          ></a>
        </div>
        <span>방명록 (개발 중)</span>
      </div>
    </nav>
    <header>
      <h1 class="chall-title chall-center chall-title___box">
        ch.2 잇츠 밥 바라밥 타임
      </h1>
    </header>
    <main class="chall-center chall-content__box">
      <p class="chall-content chall-contentch1">
        오우.. 대양홀에서 너무 즐겨버렸어,<br />
        너희들도 배고플꺼야 그렇취? <br />
        우리 이제 학식으로 유우우우명한 소금구이 덮밥 먹으러 가자구~ <br />
        이곳은 유리로 되어 있는 건물 뒤자아인이 뽀인트쥐~<br />
        여긴 으디이이게에? <br />
      </p>
    </main>  

      <section id="main-cont">
        <button
          type="button"
          class="start-btn chall_sub_btn chall-btn"
          onclick="init()"
        >
          <span class="start-btn__text chall_sub_text"
            >사진을 넣으려면 클릭!!, 도즈어언??</span
          >
        </button>
      </section>

      <script
        class="jsbin"
        src="https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"
      ></script>

      <div class="file-upload hide">
        <button type="button" class="predict-btn" onclick="predict()">
          예측 시작
        </button>
        <div class="image-upload-wrap">
          <input
            class="file-upload-input"
            type="file"
            onchange="readURL(this);"
            accept="image/*"
          />
          <div class="drag-text">
            <h3>사진을 여기에 끌어 옮기거나, 클릭해서 사진을 선택하세요!</h3>
          </div>
        </div>
        <div class="file-upload-content">
          <img
            class="file-upload-image"
            id="building-image"
            src="#"
            alt="your image"
          />
          <div class="image-title-wrap">
            <button type="button" onclick="removeUpload()" class="remove-image">
              Remove <span class="image-title">Uploaded Image</span>
            </button>
          </div>
        </div>
      </div>

      <!-- 출력이 여기서 됌 -->
      <div id="label-container"></div>
      <div class="result">
        <div class="tellRes chall_res_text1"></div>
        <div class="maxResult chall_res_text2"></div>
        <div class="isAnswer chall_res_text3 hide">
          "병아뤼들 주위를 둘러봐 통유리창이 이쁜 ㅎㅅㅎㄱ !!"
        </div>
      </div>
      <section class="chall-btn__sec hide">
        <div class="chall-btn">
          <a href="four" class="chall-center"
            ><span class="chall-btn__text">미션 3으로 가기</span></a
          >
        </div>
      </section>
    </section>
    <script
      src="https://code.jquery.com/jquery-3.4.1.slim.min.js"
      integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
      integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
      crossorigin="anonymous"
    ></script>
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.3.1/dist/tf.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@teachablemachine/image@0.8/dist/teachablemachine-image.min.js"></script>
    <script>
      function readURL(input) {
        if (input.files && input.files[0]) {
          var reader = new FileReader();

          reader.onload = function (e) {
            $(".image-upload-wrap").hide();

            $(".file-upload-image").attr("src", e.target.result);
            $(".file-upload-content").show();

            $(".image-title").html(input.files[0].name);
          };

          reader.readAsDataURL(input.files[0]);
        } else {
          removeUpload();
        }
      }

      function removeUpload() {
        $(".file-upload-input").replaceWith($(".file-upload-input").clone());
        $(".file-upload-content").hide();
        $(".image-upload-wrap").show();
      }
      $(".image-upload-wrap").bind("dragover", function () {
        $(".image-upload-wrap").addClass("image-dropping");
      });
      $(".image-upload-wrap").bind("dragleave", function () {
        $(".image-upload-wrap").removeClass("image-dropping");
      });
    </script>
    <script type="text/javascript">
      // More API functions here:
      // https://github.com/googlecreativelab/teachablemachine-community/tree/master/libraries/image

      // the link to your model provided by Teachable Machine export panel
      const URL = "https://teachablemachine.withgoogle.com/models/4isctdtLI/";

      let model, webcam, labelContainer, maxPredictions;

      // Load the image model and setup the webcam
      async function init() {
        const modelURL = URL + "model.json";
        const metadataURL = URL + "metadata.json";

        // load the model and metadata
        // Refer to tmImage.loadFromFiles() in the API to support files from a file picker
        // or files from your local hard drive
        // Note: the pose library adds "tmImage" object to your window (window.tmImage)
        model = await tmImage.load(modelURL, metadataURL);
        maxPredictions = model.getTotalClasses();

        labelContainer = document.getElementById("label-container");
        for (let i = 0; i < maxPredictions; i++) {
          // and class labels
          labelContainer.appendChild(document.createElement("div"));
        }
      }

      // run the webcam image through the image model
      async function predict() {
        // predict can take in an image, video or canvas html element

        var image = document.getElementById("building-image");

        // 변수 설정
        const prediction = await model.predict(image, false);
        let maxRes = 0.0;
        const maxResult = document.querySelector(".maxResult");
        const tellRes = document.querySelector(".tellRes");
        const removeImg = document.querySelector(".remove-image");
        let maxBuilding;

        for (let i = 0; i < maxPredictions; i++) {
          const result = prediction[i].probability.toFixed(2);
          const resBuilding = prediction[i].className;
          const classPrediction =
            prediction[i].className +
            ": " +
            prediction[i].probability.toFixed(2);

          // labelContainer.childNodes[i].innerHTML = classPrediction;
          // result => t.m 확률, maxRes => t.m 에서의 가장 큰 확률, maxBuilding => maxRes의 건물명
          if (result > maxRes) {
            maxRes = result;
            maxBuilding = resBuilding;
          }
        }
        tellRes.innerHTML = "삐약이가 올린 건물은..?";
        maxResult.innerHTML = maxBuilding;

        // isAnswer 값에 따라 출력하기
        const answer = document.querySelector(".isAnswer");
        const nextLevel = document.querySelector(".chall-btn__sec");

        let isAnswer = 1;

        if (maxBuilding !== "학생회관") {
          isAnswer = 0;
        }

        if (isAnswer === 1) {
          answer.classList.remove("hide");
          answer.innerHTML = "워후!! 훌륭해 바로 다음 투어로 꼬우!";
          nextLevel.classList.remove("hide");
        } else answer.classList.remove("hide");

        removeImg.addEventListener("click", () => {
          tellRes.innerHTML = "";
          maxResult.innerHTML = "";
        });
      }
    </script>
    <!-- 숨기고 나오게 하기 -->
    <script>
      const startBtn = document.querySelector(".start-btn");
      const hide = document.querySelector(".hide");
      const removeLabel = document.querySelector(".remove-label");
      const fileUpload = document.querySelector(".file-upload");
      const startBtnText = document.querySelector(".start-btn__text");
      const afterClick = "도전!!";
      const beforeClick = "사진을 넣으려면 클릭!!, 도즈어언??";
      const sjBlue = "#334D61";
      const sjRed = "#C30E2E";

      startBtn.addEventListener("click", () => {
        fileUpload.classList.toggle("hide");
        let checkHide = fileUpload.classList.contains("hide");
        if (checkHide) {
          startBtnText.innerText = beforeClick;
          startBtn.style.backgroundColor = sjRed;
        } else {
          startBtnText.innerText = afterClick;
          startBtn.style.backgroundColor = sjBlue;
        }
      });
    </script>
    </main>
  </body>
</html>
